{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Projeção a partir de eigenvariables\"\nauthor: \"Andrea Sánchez Tapia\"\ndate: \"16 de marzo de 2016\"\noutput: \n    html_document:\n        toc: TRUE\n---\n\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE,warning=F,message=F)\n```\nVamos tentar fazer a projeção de um grupo de eigenvariables a outro. \nEm vez de usar dois tempos, vou pegar dois estados do Brasil, Minas Gerais e São Paulo, para ver como fazer para projetar em Minas um modelo realizado a partir de eigenvariables correspondentes a São Paulo. \n\n\n## Lê os dados\n```{r read.data,eval=T,echo=T}\nlibrary(raster)\nlibrary(maptools)\nlibrary(scales)\n#de ocorrencias\ncaryocar <- read.delim( \"./data/caryocar.txt\")\n# o shape do brasil\nbra <- readShapePoly(\"./data/BRA_adm/BRA_ADM1.SHP\")\n\n#separa minas e sp\nMG <- bra[bra$ADM1 == \"MINAS GERAIS\",]\nSP <- bra[bra$ADM1 == \"SAO PAULO\",]\n\n#lê preditores\npredictors <-  stack(list.files(\"./env_10km/\",full.names = T)[-24])\nplot(predictors[[1]])\n\nplot(bra,add=T)\npoints(caryocar[,c(2,3)],pch = 19)\n```\n\n## Cria as variáveis ambientais para comparação\n\n```{r cria variaveis ambientais independentes,echo=T,eval=T}\n#minas\nenv.mg <- crop(predictors,MG)\nenv.mg <- mask(env.mg,MG)\nplot(env.mg[[1]])\n\n#sampa\nenv.sp <- crop(predictors,SP)\nenv.sp <- mask(env.sp,SP)\nplot(env.sp[[1]])\n```\n\n## Cria as eigenvariables desde São Paulo\n\n```{r pca.SP,echo=T,eval=T}\n#Cria as eigenvariables desde Sao Paulo:\nnon.na <- sum(!is.na(values(env.sp[[1]])))\nsr.sp <- sampleRandom(env.sp, non.na)\nhead(sr.sp[,1:6])\npca.sp <- prcomp(scale(sr.sp))\nsummary(pca.sp)#CINCO EIXOS explicam 95.19%\n```\n\n```{r rda,echo=F,eval=T}\nlibrary(vegan)\npca.v <- rda(scale(sr.sp))\nplot(pca.v, type=\"n\", scaling = -1)\npoints( pca.v, \"sites\",scaling = -1, pch = \".\", col= \"grey\")\ntext(pca.v, \"species\", scaling = -1)\n```\n```{r eigenSP,eval=T,echo=T}\neigenvariables.sp <- predict(env.sp, pca.sp, index=1:5)\nplot(eigenvariables.sp)\n```\n\n## Projeta em MG e compara com eigen de lá\n\n```{r pca.MG, echo=T,eval=T}\n#Cria as eigenvariables desde Minas:\nnon.na <- sum(!is.na(values(env.mg[[1]])))\nsr.mg <- sampleRandom(env.mg, non.na)\nhead(sr.mg[,1:6])\npca.mg <- prcomp(scale(sr.mg))\nsummary(pca.mg)#SEIC EIXOS explicam 96.61%\n```\n\n```{r rdamd,echo=F,eval=T}\nlibrary(vegan)\npca.v <- rda(scale(sr.mg))\nplot(pca.v, type=\"n\", scaling = -1)\npoints( pca.v, \"sites\",scaling = -1, pch = \".\", col= \"grey\")\ntext(pca.v, \"species\", scaling = -1)\n```\n\n\n\n```{r eigenMG,echo=T, eval=T}\n# Cria as eigen de MG\neigenvariables.mg <- predict(env.mg, pca.mg, index=1:6)\nplot(eigenvariables.mg)\n# Projeta as eigen de SP em MG (a partir de pca.sp)\neigenvariables.sp.to.mg <- predict(env.mg, pca.sp, index=1:5)\nplot(eigenvariables.sp.to.mg)\n```\n\nClaramente não são espaços ambientais similares. Vamos juntar para checar. \n\n```{r compara tudo,eval=F,echo=F}\nplot(eigenvariables.sp)\nplot(eigenvariables.sp.to.mg)\nplot(eigenvariables.mg)\nplot(eigenvariables.mg.to.sp)\n```\n\n## Juntando SP e MG: dataset com todos\n\n```{r SPMGjunto,eval=T,echo=T}\nestado <- as.factor(c(rep(\"SP\",nrow(sr.sp)),rep(\"MG\",nrow(sr.mg))))\n\nSP.MG <- rbind(sr.sp,sr.mg)\n\npca.tudo <- rda(scale(SP.MG))\nplot(pca.tudo,type=\"n\",scaling=-1)\npoints(pca.tudo,\"sites\",col=alpha(unclass(estado)+1,0.3),scaling=-1,pch=19,cex=0.5)\nordiellipse(pca.tudo,groups = estado, label= T)\n```\n\n# Próximos passos (feel free to add here):\n\n+ Tentar plotar novos pontos do espaço ambientai mineiro sobre o PCA do espaço ambiental paulista.\n+ Ver como isso funciona na hora de modelar.\n\n\n```{r writeEigen,echo=FALSE,eval=FALSE}\n#ESCREVE AS EIGENVARIABLES E ESQUECE O PASSADO:\ndir.create(\"./env_eigen\")\nwriteRaster(eigenvariables,\"./env_eigen/eigen.tif\",overwrite=T)\n\n#reads eigen\neigen <- stack(list.files(\"./env_eigen/\",full.names = T))\nplot(eigen)\n\nplot(eigen[[1]])\npoints(caryocar[,c(2,3)],pch = 19)\n```",
    "created" : 1458159575942.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "18|30|37|0|\n",
    "hash" : "1737582944",
    "id" : "6E5E45AD",
    "lastKnownWriteTime" : 1458163435,
    "last_content_update" : 1458163436340,
    "path" : "~/Documents/2 Analisis de datos/ENM/eigentest/eigentest.Rmd",
    "project_path" : "eigentest.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}